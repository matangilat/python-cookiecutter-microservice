{% if cookiecutter.deploy_monitoring_stack == 'yes' %}
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /etc/grafana/provisioning/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  node-exporter.json: |
    {
      "dashboard": {
        "title": "Node Exporter Full",
        "tags": ["node-exporter"],
        "timezone": "browser",
        "panels": [
          {
            "title": "CPU Usage",
            "targets": [
              {
                "expr": "100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "{{instance}}"
              }
            ],
            "type": "graph",
            "gridPos": {"x": 0, "y": 0, "w": 12, "h": 8}
          },
          {
            "title": "Memory Usage",
            "targets": [
              {
                "expr": "100 * (1 - ((node_memory_MemAvailable_bytes) / (node_memory_MemTotal_bytes)))",
                "legendFormat": "{{instance}}"
              }
            ],
            "type": "graph",
            "gridPos": {"x": 12, "y": 0, "w": 12, "h": 8}
          },
          {
            "title": "Disk Usage",
            "targets": [
              {
                "expr": "100 - ((node_filesystem_avail_bytes{mountpoint=\"/\",fstype!=\"rootfs\"} * 100) / node_filesystem_size_bytes{mountpoint=\"/\",fstype!=\"rootfs\"})",
                "legendFormat": "{{instance}}"
              }
            ],
            "type": "graph",
            "gridPos": {"x": 0, "y": 8, "w": 12, "h": 8}
          },
          {
            "title": "Network Traffic",
            "targets": [
              {
                "expr": "rate(node_network_receive_bytes_total[5m])",
                "legendFormat": "{{instance}} - {{device}} - RX"
              },
              {
                "expr": "rate(node_network_transmit_bytes_total[5m])",
                "legendFormat": "{{instance}} - {{device}} - TX"
              }
            ],
            "type": "graph",
            "gridPos": {"x": 12, "y": 8, "w": 12, "h": 8}
          }
        ],
        "version": 1
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - containerPort: 3000
          name: web
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_SERVER_ROOT_URL
          value: "http://localhost:3000"
        volumeMounts:
        - name: datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: dashboards
          mountPath: /var/lib/grafana/dashboards
        - name: storage
          mountPath: /var/lib/grafana
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: datasources
        configMap:
          name: grafana-datasources
      - name: dashboards-config
        configMap:
          name: grafana-dashboards-config
      - name: dashboards
        configMap:
          name: grafana-dashboards
      - name: storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    name: web
  selector:
    app: grafana
{% endif %}
